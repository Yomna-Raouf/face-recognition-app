{"version":3,"sources":["Components/Navbar/Navbar.jsx","Components/Logo/Logo.jsx","Components/LinkForm/LinkForm.jsx","Components/Rank/Rank.jsx","Components/FaceRecognitionBox/FaceRecognitionBox.jsx","Components/SignIn/Signin.jsx","Components/Register/Register.jsx","App.js","serviceWorker.js","index.js","Components/Logo/identity.svg"],"names":["Navbar","onRouteChange","isSignedIn","className","onClick","Logo","options","max","src","faceDetection","alt","LinkForm","onInputChange","onImageSubmit","link","value","placeholder","type","onChange","Rank","name","rank","FaceRecognitionBox","imageURL","faceBox","id","length","map","face","index","key","style","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","Signin","loadUser","useState","signInEmail","setSignInEmail","signInPassword","setSignInPassword","errorSignin","setErrorSignin","color","htmlFor","e","target","preventDefault","fetch","method","headers","body","JSON","stringify","email","password","then","response","status","json","user","Register","setEmail","setPassword","setName","onSubmitRegister","App","input","setInput","imageUrl","setImageUrl","box","setBox","route","setRoute","setIsSignedIn","entries","joined","setUser","data","params","fpsLimit","interactivity","detectsOn","events","enable","mode","onHover","resize","modes","push","quantity","repulse","distance","duration","particles","links","opacity","width","collisions","move","direction","outMode","random","speed","straight","number","density","value_area","detectRetina","entriesCount","catch","err","alert","clarifaiFacesData","outputs","regions","image","document","getElementById","Number","height","clarifaiFace","region_info","bounding_box","left_col","top_row","right_col","bottom_row","calculateFaceLocation","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.fa555fc1.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Navbar.css\";\r\n\r\nconst Navbar = ({ onRouteChange, isSignedIn }) => {\r\n  return isSignedIn ? (\r\n    <nav className=\"Navbar\">\r\n      <button\r\n        onClick={() => onRouteChange(\"signout\")}\r\n        className=\"Navbar__signout\"\r\n      >\r\n        Sign out\r\n      </button>\r\n    </nav>\r\n  ) : (\r\n    <nav className=\"Navbar\">\r\n      <button\r\n        onClick={() => onRouteChange(\"signIn\")}\r\n        className=\"Navbar__signout\"\r\n      >\r\n        Sign in\r\n      </button>\r\n      <button\r\n        onClick={() => onRouteChange(\"register\")}\r\n        className=\"Navbar__Register\"\r\n      >\r\n        Register\r\n      </button>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport Tilt from \"react-tilt\";\r\n\r\nimport \"./Logo.css\";\r\nimport faceDetection from \"./identity.svg\";\r\n\r\nfunction Logo() {\r\n  return (\r\n    <div className=\"Logo\">\r\n      <Tilt className=\"Tilt\" options={{ max: 45 }}>\r\n        <div className=\"Tilt-inner\">\r\n          <img src={faceDetection} alt=\"Logo\" />\r\n        </div>\r\n      </Tilt>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Logo;\r\n","import React from \"react\";\r\nimport \"./LinkForm.css\";\r\n\r\nfunction LinkForm({ onInputChange, onImageSubmit, link }) {\r\n  return (\r\n    <div className=\"LinkForm\">\r\n      <p className=\"LinkForm__description\">\r\n        {\"This App will detect faces in your pictures. Give it a try\"}\r\n      </p>\r\n      <div className=\"LinkForm__formContainer\">\r\n        <form className=\"LinkForm__form\">\r\n          <input\r\n            value={link}\r\n            placeholder=\"Your Image Link\"\r\n            className=\"LinkForm__formInput\"\r\n            type=\"text\"\r\n            onChange={onInputChange}\r\n          />\r\n          <button className=\"LinkForm__formButton\" onClick={onImageSubmit}>\r\n            Detect\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LinkForm;\r\n","import React from \"react\";\r\n\r\nimport \"./Rank.css\";\r\n\r\nfunction Rank({ name, rank }) {\r\n  return (\r\n    <div className=\"Rank\">\r\n      <div className=\"Rank__user\">\r\n        <p>{name}, your entry count is </p>\r\n      </div>\r\n      <div className=\"Rank__score\">\r\n        <p>{rank}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Rank;\r\n","import React from \"react\";\r\nimport \"./FaceRecognitionBox.css\";\r\n\r\nfunction FaceRecognitionBox({ imageURL, faceBox }) {\r\n  return (\r\n    <div className=\"FaceRecognitionBox\">\r\n      <div className=\"FaceRecognitionBox__imageContainer\">\r\n        <img\r\n          id=\"inputImage\"\r\n          className=\"FaceRecognitionBox__image\"\r\n          src={imageURL}\r\n          alt=\"\"\r\n        />\r\n\r\n        {faceBox.length &&\r\n          faceBox.map((face, index) => (\r\n            <div\r\n              className=\"FaceRecognitionBox_imageBoundingBox\"\r\n              key={index}\r\n              style={{\r\n                top: face.topRow,\r\n                right: face.rightCol,\r\n                bottom: face.bottomRow,\r\n                left: face.leftCol,\r\n              }}\r\n            ></div>\r\n          ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FaceRecognitionBox;\r\n","import React, { useState } from \"react\";\r\nimport \"./signIn.css\";\r\n\r\nconst Signin = ({ onRouteChange, loadUser }) => {\r\n  const [signInEmail, setSignInEmail] = useState(\"\");\r\n  const [signInPassword, setSignInPassword] = useState(\"\");\r\n  const [errorSignin, setErrorSignin] = useState(\"\");\r\n\r\n  const onEmailChange = (e) => {\r\n    setSignInEmail(e.target.value);\r\n  };\r\n\r\n  const onPasswordChange = (e) => {\r\n    setSignInPassword(e.target.value);\r\n  };\r\n\r\n  const onSubmitSignIn = (e) => {\r\n    e.preventDefault();\r\n    fetch(\"https://enigmatic-basin-52522.herokuapp.com/signin\", {\r\n      method: \"post\",\r\n      headers: { \"content-type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        email: signInEmail,\r\n        password: signInPassword,\r\n      }),\r\n    })\r\n      .then((response) => {\r\n        if (response.status === 200) return response.json();\r\n      })\r\n      .then((user) => {\r\n        if (user?.id) {\r\n          loadUser(user);\r\n          onRouteChange(\"home\");\r\n        } else {\r\n          setErrorSignin(\"wrong credintials\");\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"Signin\">\r\n      <div className=\"Signin__container\">\r\n        <form className=\"Signin__form\">\r\n          <fieldset id=\"sign_in\" className=\"Signin__formFieldset\">\r\n            <legend>Sign In</legend>\r\n            <p style={{ color: \"red\" }}>{errorSignin}</p>\r\n            <div className=\"Signin__formFieldsetEmail\">\r\n              <label htmlFor=\"email-address\">Email</label>\r\n              <input\r\n                type=\"email\"\r\n                name=\"email-address\"\r\n                id=\"email-address\"\r\n                placeholder=\"name@example.com\"\r\n                onChange={onEmailChange}\r\n              />\r\n            </div>\r\n            <div className=\"Signin__formFieldsetPassword\">\r\n              <label htmlFor=\"password\">Password</label>\r\n              <input\r\n                type=\"password\"\r\n                name=\"password\"\r\n                id=\"password\"\r\n                placeholder=\"Enter your password\"\r\n                onChange={onPasswordChange}\r\n              />\r\n            </div>\r\n          </fieldset>\r\n          <div className=\"Signin__formSigninButton\">\r\n            <button onClick={onSubmitSignIn} type=\"submit\">\r\n              Sign in\r\n            </button>\r\n          </div>\r\n          <div className=\"Signin__formRegisterButton\">\r\n            <p>Don't have account?</p>\r\n            <button onClick={() => onRouteChange(\"register\")}>Register</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Signin;\r\n","import React, { useState } from \"react\";\r\nimport \"./Register.css\";\r\n\r\nfunction Register({ onRouteChange, loadUser }) {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [errorSignin, setErrorSignin] = useState(\"\");\r\n\r\n  const onNameChange = (e) => {\r\n    setName(e.target.value);\r\n  };\r\n\r\n  const onEmailChange = (e) => {\r\n    setEmail(e.target.value);\r\n  };\r\n\r\n  const onPasswordChange = (e) => {\r\n    setPassword(e.target.value);\r\n  };\r\n\r\n  const onSubmitRegister = (e) => {\r\n    e.preventDefault();\r\n    fetch(\"https://enigmatic-basin-52522.herokuapp.com/register\", {\r\n      method: \"post\",\r\n      headers: { \"content-type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        email: email,\r\n        password: password,\r\n        name: name,\r\n      }),\r\n    })\r\n      .then((response) => {\r\n        if (response.status === 200) return response.json();\r\n      })\r\n      .then((user) => {\r\n        if (user?.id) {\r\n          loadUser(user);\r\n          onRouteChange(\"home\");\r\n        } else {\r\n          setErrorSignin(\"Not Valid Information\");\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"Register\">\r\n      <div className=\"Register__container\">\r\n        <form className=\"Register__form\">\r\n          <fieldset id=\"sign_up\" className=\"Register__formFieldset\">\r\n            <legend>Register</legend>\r\n            <p style={{ color: \"red\" }}>{errorSignin}</p>\r\n            <div className=\"Register__formFieldsetName\">\r\n              <label htmlFor=\"user-name\">Name</label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"user-name\"\r\n                id=\"user-name\"\r\n                placeholder=\"name\"\r\n                onChange={onNameChange}\r\n              />\r\n            </div>\r\n            <div className=\"Register__formFieldsetEmail\">\r\n              <label htmlFor=\"email-address\">Email</label>\r\n              <input\r\n                type=\"email\"\r\n                name=\"email-address\"\r\n                id=\"email-address\"\r\n                placeholder=\"name@example.com\"\r\n                onChange={onEmailChange}\r\n              />\r\n            </div>\r\n            <div className=\"Register__formFieldsetPassword\">\r\n              <label htmlFor=\"password\">Password</label>\r\n              <input\r\n                type=\"password\"\r\n                name=\"password\"\r\n                id=\"password\"\r\n                placeholder=\"Enter your password\"\r\n                onChange={onPasswordChange}\r\n              />\r\n            </div>\r\n          </fieldset>\r\n          <div className=\"Register__formSignupButton\">\r\n            <button onClick={(e) => onSubmitRegister(e)} type=\"submit\">\r\n              Sign up\r\n            </button>\r\n          </div>\r\n          <div className=\"Register__formSigninButton\">\r\n            <p>already a user?</p>\r\n            <button onClick={() => onRouteChange(\"signIn\")}>Sign in</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport Particles from \"react-tsparticles\";\nimport Navbar from \"./Components/Navbar/Navbar\";\nimport Logo from \"./Components/Logo/Logo\";\nimport LinkForm from \"./Components/LinkForm/LinkForm\";\nimport Rank from \"./Components/Rank/Rank\";\nimport FaceRecognitionBox from \"./Components/FaceRecognitionBox/FaceRecognitionBox\";\nimport Signin from \"./Components/SignIn/Signin\";\nimport Register from \"./Components/Register/Register\";\n\nconst App = () => {\n  const [input, setInput] = useState(\"\");\n  const [imageUrl, setImageUrl] = useState(\"\");\n  const [box, setBox] = useState({});\n  const [route, setRoute] = useState(\"signIn\");\n  const [isSignedIn, setIsSignedIn] = useState(false);\n  const [user, setUser] = useState({\n    id: \"\",\n    name: \"\",\n    email: \"\",\n    entries: 0,\n    joined: \"\",\n  });\n\n  const ParticlesOptions = {\n    fpsLimit: 60,\n    interactivity: {\n      detectsOn: \"canvas\",\n      events: {\n        onClick: {\n          enable: true,\n          mode: \"push\",\n        },\n        onHover: {\n          enable: true,\n          mode: \"repulse\",\n        },\n        resize: true,\n      },\n      modes: {\n        push: {\n          quantity: 4,\n        },\n        repulse: {\n          distance: 200,\n          duration: 0.4,\n        },\n      },\n    },\n    particles: {\n      color: {\n        value: \"#ffffff\",\n      },\n      links: {\n        color: \"#ffffff\",\n        distance: 150,\n        enable: true,\n        opacity: 0.5,\n        width: 1,\n      },\n      collisions: {\n        enable: true,\n      },\n      move: {\n        direction: \"none\",\n        enable: true,\n        outMode: \"bounce\",\n        random: false,\n        speed: 3,\n        straight: false,\n      },\n      number: {\n        density: {\n          enable: true,\n          value_area: 800,\n        },\n        value: 80,\n      },\n      opacity: {\n        value: 0.5,\n      },\n    },\n    detectRetina: true,\n  };\n\n  const calculateFaceLocation = (data) => {\n    const clarifaiFacesData = data.outputs[0].data.regions;\n    const image = document.getElementById(\"inputImage\");\n    const width = Number(image.width);\n    const height = Number(image.height);\n    const clarifaiFaces = clarifaiFacesData.map((clarifaiFace) => {\n      clarifaiFace = {\n        leftCol: clarifaiFace.region_info.bounding_box.left_col * width,\n        topRow: clarifaiFace.region_info.bounding_box.top_row * height,\n        rightCol:\n          width - clarifaiFace.region_info.bounding_box.right_col * width,\n        bottomRow:\n          height - clarifaiFace.region_info.bounding_box.bottom_row * height,\n      };\n      return clarifaiFace;\n    });\n\n    return clarifaiFaces;\n  };\n\n  const loadUser = (data) => {\n    setUser({\n      id: data.id,\n      name: data.name,\n      email: data.email,\n      entries: data.entries,\n      joined: data.joined,\n    });\n  };\n\n  const displayBoxAroundFaces = (faceBox) => {\n    setBox(faceBox);\n  };\n\n  const onInputChange = (e) => {\n    setInput(e.target.value);\n  };\n\n  const onImageSubmit = (e) => {\n    e.preventDefault();\n    setImageUrl(input);\n    fetch(\"https://enigmatic-basin-52522.herokuapp.com/imageurl\", {\n      method: \"post\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        input: input,\n      }),\n    })\n      .then((response) => response.json())\n      .then((response) => {\n        if (response) {\n          fetch(\"https://enigmatic-basin-52522.herokuapp.com/image\", {\n            method: \"put\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify({\n              id: user.id,\n            }),\n          })\n            .then((response) => response.json())\n            .then((entriesCount) => {\n              setUser({ ...user, entries: entriesCount });\n            })\n            .catch((err) => alert(\"unable to work with API\"));\n        }\n        displayBoxAroundFaces(calculateFaceLocation(response));\n      })\n      .catch((err) =>\n        alert(\n          \"Please Enter a valid image url that ends with .png or .jpeg or .jpg or any valid image extension or try again later\"\n        )\n      );\n  };\n\n  const onRouteChange = (route) => {\n    if (route === \"signout\") {\n      setInput(\"\");\n      setImageUrl(\"\");\n      setBox({});\n      setRoute(\"signIn\");\n      setIsSignedIn(false);\n      setUser({\n        id: \"\",\n        name: \"\",\n        email: \"\",\n        entries: 0,\n        joined: \"\",\n      });\n    } else if (route === \"home\") {\n      setIsSignedIn(true);\n    }\n    setRoute(route);\n  };\n\n  return (\n    <div className=\"app\">\n      <Particles className=\"particles\" params={ParticlesOptions} />\n      <Navbar onRouteChange={onRouteChange} isSignedIn={isSignedIn} />\n      {route === \"home\" ? (\n        <>\n          <Logo />\n          <Rank name={user.name} rank={user.entries} />\n          <LinkForm\n            link={input}\n            onInputChange={onInputChange}\n            onImageSubmit={onImageSubmit}\n          />\n          <FaceRecognitionBox faceBox={box} imageURL={imageUrl} />\n        </>\n      ) : route === \"signIn\" ? (\n        <Signin loadUser={loadUser} onRouteChange={onRouteChange} />\n      ) : (\n        <Register loadUser={loadUser} onRouteChange={onRouteChange} />\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/identity.6d0e212a.svg\";"],"sourceRoot":""}